name: Deploy latest repo code as mlproject on databricks
on: [push]
jobs:
  training:
#    if: github.actor == 'sshruti23'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Create a new cluster for databricks job to run
        id: cluster_id
        run: |
            output=$(curl -X POST https://${{ secrets.AWS_DB_HOST }}/api/2.0/clusters/create \
              -H "Authorization:Bearer ${{ secrets.AWS_DB_TOKEN }}" \
              -H "Content-Type: application/json" \
              --data @github_workflows/data/cluster_creation_request.json)
            echo "$( jq -r  '.cluster_id' <<< "${output}" )"
            echo "cluster_id=$id" >> $GITHUB_ENV
      - name: Update pipeline request body json with cluster id
        run: |
            python github_workflows/scripts/create_request_body.py "${{ env.cluster_id }}"
            cat github_workflows/data/request.json
      #TODO: 1. Call Repo API and update the main branch code in databricks
      #TODO: 2. Check if there is a way to check if the cluster has been created or not
      #TODO: 3. remove sleep if 2 works
#      - name: Create And Start A Databricks Job For Training Model
#        run: |
#            sleep 4m
#
#            rm -rf github_workflows/data/request.json
#
#            curl -X POST https://${{ secrets.AWS_DB_HOST }}/api/2.1/jobs/runs/submit \
#            -H "Authorization:Bearer ${{ secrets.AWS_DB_TOKEN }}" \
#            -H "Content-Type: application/json" \
#            --data @github_workflows/data/request.json
#
#            rm -rf github_workflows/data/request.json
  register:
    if: github.actor == 'sshruti23'
    runs-on: ubuntu-latest
    needs: training
    environment: 'register'
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Echo Something
        run: |
              echo "I'm a echo from prod stage"